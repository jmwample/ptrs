[package]
name = "o5"
version = "0.1.0-alpha.1"
edition = "2021"
authors = ["Jack Wampler <jack.wampler@colorado.edu>"]
rust-version = "1.81"
license = "MIT OR Apache-2.0"
description = "Pure rust implementation of the o5 pluggable transport"
keywords = ["tor", "censorship", "pluggable", "transports"]
categories = ["network-programming", "cryptography"]
repository = "https://github.com/jmwample/ptrs"


[lib]
name = "o5"
crate-type = ["cdylib", "rlib"]

[dependencies]
## Local
ptrs = { path="../ptrs", version="0.1.0" }

## PRNG
getrandom = "0.2.11"
rand = { version="0.8.5", features=["getrandom"]}
rand_core = "0.6.4"

## Crypto
digest = { version = "0.10.7", features=["mac", "core-api"]}
typenum = "1.17.0"
block-buffer = "0.10.4"
siphasher = "1.0.0"
sha2 = "0.10.8"
hmac = { version="0.12.1", features=["reset"]}
hkdf = "0.12.3"
crypto_secretbox = { version="0.1.1", features=["chacha20"]}
subtle = "2.5.0"
x25519-dalek = { version = "2.0.1", features = ["static_secrets", "getrandom", "reusable_secrets"]}
x-wing = "0.0.1-alpha"

## Utils
pin-project = "1.1.3"
hex = "0.4.3"
futures = "0.3.29"
tracing = "0.1.40"
colored = "2.0.4"
serde_json = "1.0.114"
serde = "1.0.197"
base64 = "0.22.0"

## Networking tools
tokio = { version = "1.33", features = ["io-util", "rt-multi-thread", "net", "rt", "macros", "sync", "signal", "time", "fs"] }
tokio-util = { version = "0.7.10", features = ["codec", "io"]}
bytes = "1.5.0"

## ntor_arti
tor-cell = "0.23.0"
tor-llcrypto = "0.23.0"
tor-error = "0.23.0"
tor-bytes = "0.23.0"
cipher = "0.4.4"
zeroize = "1.7.0"
thiserror = "1.0.56"

curve25519-elligator2 = { version="0.1.0-alpha.1", features=["elligator2"] }

# o5 pqc
ml-kem = "0.2.1"
kem = "0.3.0-pre.0"
# kemeleon = { version="0.1.0-rc.1", path="../../../../elligantt/kemeleon"}
kemeleon = { version="0.1.0-rc.1", git="https://github.com/jmwample/kemeleon", branch="cleanup"}

[dev-dependencies]
anyhow = "1.0"
tracing-subscriber = "0.3.18"
hex-literal = "0.4.1"
tor-basic-utils = "0.22.0"


[lints.rust]
# unexpected_cfgs are used to disable incomplete / WIP features and tests. This is
# not an error for this library. This turns off that specific lint for the "disable" feature.
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(target_features, values("disabled"))'] }

